**Schema (PostgreSQL v13)**

    CREATE SCHEMA dannys_diner;
    SET search_path = dannys_diner;
    
    CREATE TABLE sales (
      "customer_id" VARCHAR(1),
      "order_date" DATE,
      "product_id" INTEGER
    );
    
    INSERT INTO sales
      ("customer_id", "order_date", "product_id")
    VALUES
      ('A', '2021-01-01', '1'),
      ('A', '2021-01-01', '2'),
      ('A', '2021-01-07', '2'),
      ('A', '2021-01-10', '3'),
      ('A', '2021-01-11', '3'),
      ('A', '2021-01-11', '3'),
      ('B', '2021-01-01', '2'),
      ('B', '2021-01-02', '2'),
      ('B', '2021-01-04', '1'),
      ('B', '2021-01-11', '1'),
      ('B', '2021-01-16', '3'),
      ('B', '2021-02-01', '3'),
      ('C', '2021-01-01', '3'),
      ('C', '2021-01-01', '3'),
      ('C', '2021-01-07', '3');
     
    
    CREATE TABLE menu (
      "product_id" INTEGER,
      "product_name" VARCHAR(5),
      "price" INTEGER
    );
    
    INSERT INTO menu
      ("product_id", "product_name", "price")
    VALUES
      ('1', 'sushi', '10'),
      ('2', 'curry', '15'),
      ('3', 'ramen', '12');
      
    
    CREATE TABLE members (
      "customer_id" VARCHAR(1),
      "join_date" DATE
    );
    
    INSERT INTO members
      ("customer_id", "join_date")
    VALUES
      ('A', '2021-01-07'),
      ('B', '2021-01-09');

---

QUESTION ONE
What is the total amount each customer spent at the restaurant?

****QUERY*****
 SET search_path = dannys_diner;
    SELECT
    customer_id, Sum(price) AS Total Amount
    From Sales
    join menu
    USING(product_id)
    group by customer_id;
    
****ANSWER*****

| customer_id | Total Amount|
| B           | 74          |
| C           | 36          |
| A           | 76          |


QUESTION TWO
How many days has each customer visited the restaurant?

****QUERY*****
SET search_path = dannys_diner;
    SELECT
        customer_id, count(distinct(order_date)) AS Visits
        From Sales
        group by customer_id;
        
 ****ANSWER*****

| customer_id | visits |
| A           | 4      |
| B           | 6      |
| C           | 2      |


QUESTION THREE
What was the first item from the menu purchased by each customer?

****QUERY*****
SET search_path = dannys_diner;
    WITH ranking AS 
        (
        SELECT *,
        dense_rank() over(partition by customer_id order by order_date) AS rank
        FROM sales
        JOIN menu
        USING (product_id)
        )
        
        SELECT
        customer_id, product_name, order_date
        From ranking
        WHERE rank = 1
       group by customer_id, product_name, order_date;
       
  *****ANSWER*****

| customer_id | product_name | order_date               |
| ----------- | ------------ | ------------------------ |
| A           | curry        | 2021-01-01T00:00:00.000Z |
| A           | sushi        | 2021-01-01T00:00:00.000Z |
| B           | curry        | 2021-01-01T00:00:00.000Z |
| C           | ramen        | 2021-01-01T00:00:00.000Z |


QUESTION FOUR
What is the most purchased item on the menu and how many times was it purchased by all customers?

****QUERY*****
    SET search_path = dannys_diner;
    SELECT
           product_name, count(order_date) as most_purchased_item
           from menu
           join sales
           using (product_id)
           group by product_name
           LIMIT 1;

*****ANSWER*****

| product_name | most_purchased_item |
| ------------ | ------------------- |
| ramen        | 8                   |


QUESTION FIVE
Which item was the most popular for each customer?

*****QUERY****
    SET search_path = dannys_diner;
    SELECT
    sales.customer_id, menu.product_name, COUNT (sales.product_id) AS order_count
        from menu
        join sales
        using (product_id)
        group by customer_id, product_name, product_id
        order by product_id DESC;
        
        *****ANSWER*****

| customer_id | product_name | order_count |
| ----------- | ------------ | ----------- |
| A           | ramen        | 3           |
| B           | ramen        | 2           |
| C           | ramen        | 3           |




